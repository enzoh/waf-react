#!/usr/bin/env ruby
#
# File        : Vagrantfile
# Description : Vagrant configuration file.
# Copyright   : Copyright (c) 2016 Mirror Labs Inc. All rights reserved.
# Maintainer  : Enzo Haussecker <enzo@mirror.co>
# Stability   : Stable
# Portability : Portable
#
# NOTICE: Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
# This file configures the Vagrant development environment.
##

Vagrant.configure(2) do |config|

	# Select Vagrant box.
	config.vm.box = "ubuntu/trusty64"

	# Define virtualization platform.
	config.vm.provider "virtualbox" do |v|
		# Apply default modifications.
		v.customize ["modifyvm", :id, "--cpus", "2"]
		v.customize ["modifyvm", :id, "--memory", "8000"]
	end

	# Define virtual machine.
	config.vm.define "vagrant" do |v|
		# Configure port forwarding.
		config.vm.network "forwarded_port", guest: 8008, host: 8008
		# Run provisioning script.
		v.vm.provision "bootstrap", type: "shell", path: "provision.sh"
	end

	# Share file system.
	config.vm.synced_folder "../", "/opt/project"

	# Configure SSH.
	config.ssh.insert_key = true

end
